<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="email_id " elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">dekkazakne@gufum.com</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">email_id </stringProp>
              </elementProp>
              <elementProp name="first_name " elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">sonu</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">first_name </stringProp>
              </elementProp>
              <elementProp name="isd_code" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">+91</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">isd_code</stringProp>
              </elementProp>
              <elementProp name="last_name" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">bhagat</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">last_name</stringProp>
              </elementProp>
              <elementProp name="mobile" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">9804820330</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">mobile</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">www.elearnmarkets.com</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/login/registerfromtopnav</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">x-csrf-token</stringProp>
                <stringProp name="Header.value">f42fe2275649b6c60a4c68ff5f0f92944dcf5327fcb63d45bbc1282c8e462272e1418b9a5512741f718593c7ef45de0b77621cf612f2e5119e8d31096f26bfe7</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">cookie</stringProp>
                <stringProp name="Header.value">fb.1.1668675375527.159785938; _gcl_au=1.1.1390219872.1668675376; iDSP_Cookie=75c7971f-3c4e-46da-a9aa-0bd02d07f979**1668675376046*6cb03a223e144d65af605f8fc2d04ba1; _hjSessionUser_2985124=eyJpZCI6IjA4YzQzNGUyLWVmYTgtNTY2Zi1iYjZiLWI1YjZkMjFlNWJmZSIsImNyZWF0ZWQiOjE2Njg2NzUzNzYxNDMsImV4aXN0aW5nIjp0cnVlfQ==; _gcl_aw=GCL.1672801046.CjwKCAiAwc-dBhA7EiwAxPRylFCr1zlv-w7_QpZc2lNMAmOdUcjRNbPgeq4_ABe_w8j5RFmTZv0KMRoC6TcQAvD_BwE; _gac_UA-42003815-1=1.1672801368.CjwKCAiAwc-dBhA7EiwAxPRylFCr1zlv-w7_QpZc2lNMAmOdUcjRNbPgeq4_ABe_w8j5RFmTZv0KMRoC6TcQAvD_BwE; _gid=GA1.2.1909028582.1673233768; is_new_register=Q2FrZQ%3D%3D.MGIzN2UzNzA1YWNkNzA2YzU4Yjc3MTY2ZTYzZTgzODdiY2YzMDE0YTc3NDc1MzRmZmM0ZTYyMmY0OGI0MjA1YmOclEVqOrW%2Btey17SrgA7Nr73ZKC2Zf%2Ba8uZsuYowtf; g_state={&quot;i_l&quot;:4,&quot;i_p&quot;:1675739446645}; sc_utm_campaign=LiveMarket-VT; sc_utm_medium=email; sc_utm_source=LeadSquared; csrfToken=f42fe2275649b6c60a4c68ff5f0f92944dcf5327fcb63d45bbc1282c8e462272e1418b9a5512741f718593c7ef45de0b77621cf612f2e5119e8d31096f26bfe7; MXCookie=MXCookie; ORG11247=736062ab-f8a7-46b9-8ca8-8c7b80d68d98; _hjIncludedInSessionSample=0; _ga_7SZ4HF35D1=GS1.1.1673505598.47.1.1673505604.54.0.0; LandingPageRedirectUrl=Q2FrZQ%3D%3D.NGVlMzE2MWM2NTE1NzFkMGU4YzJmYzk2ODNjNzJlOTdkZmRiNmQ2NzM1NGE4NjNhMTkxYzk0NWFiYmFmOTE1OAv4uOCqJYIz3ppYTMn1P7YasKzXSDr1c0b5qG4IpdAM; _hjSession_2985124=eyJpZCI6IjMwNjY3NDRhLTMyZDYtNDQwOS04ZTdkLTc4YTFmZjA4ODM4MyIsImNyZWF0ZWQiOjE2NzM1MTI1MjI4MjUsImluU2FtcGxlIjpmYWxzZX0=; _hjAbsoluteSessionInProgress=0; CAKEPHP=32octtpko7rhskhkq9dtn5c9u0; _ga_LXP1QGR0EX=GS1.1.1673519366.162.0.1673519366.60.0.0; mf_bc1481e1-e409-41a8-857b-0b8c472cd836=|.47.1673519366151|1673493712935||0|||0|0|29.53761; _uetsid=07697d508fcb11eda3c4775353673a96; _uetvid=34ef8280396011ed8c854dc6ae005ba0; _ga=GA1.2.1283358234.1668675376; _gat_UA-42003815-1=1; Ltrack=Q2FrZQ%3D%3D.NmVjNGUwNzMyODMzZWJmZWZkYTE0YTg2MzU1NmExN2JhNzVkZGJkYzNkZDlmNGYyY2ZjYjJhYzViY2IzNTE5ZdGgub%2FjXnDQBMdmNM0j6OVI6Zgnb%2B8asJOWJ1I6wXlINoh92Q1UiSZdZXIGb57Dj%2F2Ksk9ri32EkPzMMIvSi%2FIf5m3zp0n8nhbE0m%2F6fQTOKbPCw2gfwpPqU50OH%2Fmd2ocmCFyuMgfV4glPnUiRWEv2MOepLxC2FqrnmogJZTQ%2Fgc0F7xGIoLj0PKyhpXFjxQxnpaW426mK2t4TePYqiv0%3D; is_new_dashboard_view=Q2FrZQ%3D%3D.YjA3NTlkYzMzNTAwYjQxZThhMTY4ZGZkNGRlNTc5NDlmYjI3MzFlNzBlYThkMTM0OGJjNjhmMzE2OTBkNDZkYyJIX3RB%2FiVgbso8%2FJew%2FR4twHIMAqUlylKLEdvIxtrE</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1700503143">&quot;success&quot;:2</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
